{"version":3,"sources":["components/ContactList/ContactList.module.css","redux/action.js","redux/reducer.js","helpers/newContact.js","redux/store.js","components/ContactForm/ContactForm.jsx","components/ContactList/ContactList.jsx","helpers/filter.js","components/Filter/Filter.jsx","App.js","index.js"],"names":["module","exports","addContact","createAction","name","number","payload","id","nanoid","deleteContact","handelChangeFilter","itemsReduser","createReducer","state","action","some","alert","getNewContact","filter","filterReduser","_","combineReducers","items","contactsPersistConfig","key","storage","blacklist","store","configureStore","reducer","contacts","persistReducer","contactsReduser","middleware","getDefaultMiddleware","serializableCheck","ignoredActions","FLUSH","REHYDRATE","PAUSE","PERSIST","PURGE","REGISTER","concat","logger","devTools","process","persistor","persistStore","ContactForm","useState","setName","setNumder","dispatch","useDispatch","handelChange","e","target","value","toСlear","Form","onSubmit","preventDefault","console","log","Group","className","controlId","Label","Control","type","pattern","title","required","onChange","Button","variant","ContactList","useSelector","toLowerCase","includes","trim","getFilterContacts","ListGroup","as","map","Item","s","item","text","text_d","button","onClick","Filter","currentTarget","App","Navbar","bg","Container","Brand","Row","Col","sm","getState","ReactDOM","render","StrictMode","loading","document","getElementById"],"mappings":"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","file":"static/js/main.e108d653.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"list\":\"ContactList_list__3RUXu\",\"text\":\"ContactList_text__284-x\",\"text_d\":\"ContactList_text_d__2agB3\",\"item\":\"ContactList_item__Q6Ijj\",\"button\":\"ContactList_button__2ncds\"};","import { createAction, nanoid } from \"@reduxjs/toolkit\";\n\nconst addContact = createAction(\"contact/add\", (name, number) => {\n  return {\n    payload: {\n      id: nanoid(),\n      name,\n      number,\n    },\n  };\n});\n\nconst deleteContact = createAction(\"contact/delete\");\n\nconst handelChangeFilter = createAction(\"contact/filter\");\n\nexport { addContact, deleteContact, handelChangeFilter };\n","import { combineReducers } from \"redux\";\nimport { createReducer } from \"@reduxjs/toolkit\";\nimport { addContact, deleteContact, handelChangeFilter } from \"./action\";\nimport { getNewContact } from \"../helpers/newContact\";\n\nconst initialStoreItem = [\n  { id: \"id-1\", name: \"Rosie Simpson\", number: \"459-12-56\" },\n  { id: \"id-2\", name: \"Hermione Kline\", number: \"443-89-12\" },\n  { id: \"id-3\", name: \"Eden Clements\", number: \"645-17-79\" },\n  { id: \"id-4\", name: \"Annie Copeland\", number: \"227-91-26\" },\n];\n\nconst itemsReduser = createReducer(initialStoreItem, {\n  [addContact]: (state, action) => getNewContact(state, action),\n  [deleteContact]: (state, { payload }) =>\n    state.filter(({ id }) => id !== payload),\n});\n\nconst filterReduser = createReducer(\"\", {\n  [handelChangeFilter]: (_, action) => action.payload,\n});\n\nexport default combineReducers({\n  items: itemsReduser,\n  filter: filterReduser,\n});\n","export const getNewContact = (state, action) => {\n  const existingContact = state.some(\n    ({ name }) => name === action.payload.name\n  );\n  return !existingContact\n    ? [...state, action.payload]\n    : (alert(`Пользователь с именем ${action.payload.name} уже добавлен`),\n      state);\n};\n","import { configureStore } from \"@reduxjs/toolkit\";\nimport {\n  persistStore,\n  persistReducer,\n  FLUSH,\n  REHYDRATE,\n  PAUSE,\n  PERSIST,\n  PURGE,\n  REGISTER,\n} from \"redux-persist\";\nimport storage from \"redux-persist/lib/storage\";\nimport contactsReduser from \"./reducer\";\nimport logger from \"redux-logger\";\n\nconst contactsPersistConfig = {\n  key: \"contacts\",\n  storage,\n  blacklist: [\"filter\"],\n};\n\nconst store = configureStore({\n  reducer: {\n    contacts: persistReducer(contactsPersistConfig, contactsReduser),\n  },\n  middleware: (getDefaultMiddleware) =>\n    getDefaultMiddleware({\n      serializableCheck: {\n        ignoredActions: [FLUSH, REHYDRATE, PAUSE, PERSIST, PURGE, REGISTER],\n      },\n    }).concat(logger),\n  devTools: process.env.NODE_ENV === \"development\",\n});\n\nconst persistor = persistStore(store);\n\nexport { store, persistor };\n","import { useState } from \"react\";\nimport { useDispatch } from \"react-redux\";\nimport { addContact } from \"../../redux/action\";\nimport Button from \"react-bootstrap/Button\";\nimport Form from \"react-bootstrap/Form\";\n\n// import s from \"./ContactForm.module.css\";\n\nexport default function ContactForm() {\n  const [name, setName] = useState(\"\");\n  const [number, setNumder] = useState(\"\");\n  const dispatch = useDispatch();\n\n  const handelChange = (e) => {\n    const { name, value } = e.target;\n    switch (name) {\n      case \"name\":\n        setName(value);\n        break;\n\n      case \"number\":\n        setNumder(value);\n        break;\n\n      default:\n        return;\n    }\n  };\n\n  const handelSubmit = (e) => {\n    e.preventDefault();\n\n    dispatch(addContact(name, number));\n    console.log(name, number);\n    toСlear();\n  };\n\n  const toСlear = () => {\n    setName(\"\");\n    setNumder(\"\");\n  };\n\n  return (\n    <Form onSubmit={handelSubmit}>\n      <Form.Group className=\"mb-3\" controlId=\"formBasicEmail\">\n        <Form.Label>Name</Form.Label>\n        <Form.Control\n          type=\"text\"\n          // className={s.input}\n          name=\"name\"\n          pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n          title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\n          required\n          value={name}\n          onChange={handelChange}\n        />\n      </Form.Group>\n\n      <Form.Group className=\"mb-3\" controlId=\"formBasicPassword\">\n        <Form.Label>Number</Form.Label>\n        <Form.Control\n          type=\"tel\"\n          // className={s.input}\n          name=\"number\"\n          pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n          title=\"Номер телефона должен состоять цифр и может содержать пробелы, тире, круглые скобки и может начинаться с +\"\n          required\n          value={number}\n          onChange={handelChange}\n        />\n      </Form.Group>\n      <Button type=\"submit\" variant=\"secondary\" className=\"mx-6\">\n        Add contact\n      </Button>\n    </Form>\n  );\n}\n\n// const mapDispatchToProps = (dispatch) => ({\n//   onSumbit: (name, number) => dispatch(addContact(name, number)),\n// });\n\n// export default connect(null, mapDispatchToProps)(ContactForm);\n","import s from \"./ContactList.module.css\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { deleteContact } from \"../../redux/action\";\nimport { getFilterContacts } from \"../../helpers/filter\";\nimport ListGroup from \"react-bootstrap/ListGroup\";\n// import Container from \"react-bootstrap/Container\";\n\nimport { BsTrash } from \"react-icons/bs\";\n\nexport default function ContactList() {\n  const contacts = useSelector(({ contacts: { items, filter } }) =>\n    getFilterContacts(items, filter)\n  );\n\n  const dispatch = useDispatch();\n\n  return (\n    // <Container className=\"p-2\">\n    <ListGroup as=\"ul\" variant=\"flush\">\n      {contacts.map(({ id, name, number }) => (\n        <ListGroup.Item as=\"li\" className={s.item} key={id}>\n          <div>\n            <p className={s.text}>\n              Name: <span className={s.text_d}>{name}</span>\n            </p>\n            <p className={s.text}>\n              Number: <span className={s.text_d}>{number}</span>\n            </p>\n          </div>\n          <button\n            type=\"button\"\n            id={id}\n            className={s.button}\n            onClick={() => dispatch(deleteContact(id))}\n          >\n            <BsTrash />\n          </button>\n        </ListGroup.Item>\n      ))}\n    </ListGroup>\n    // </Container>\n  );\n}\n","export const getFilterContacts = (contacts, filter) => {\n  return contacts.filter(({ name }) =>\n    name.toLowerCase().includes(filter.trim().toLowerCase())\n  );\n};\n","import { useSelector, useDispatch } from \"react-redux\";\nimport { handelChangeFilter } from \"../../redux/action\";\nimport Form from \"react-bootstrap/Form\";\n// import s from \"./Filter.module.css\";\n\nexport default function Filter() {\n  const filter = useSelector(({ contacts }) => contacts.filter);\n  const dispatch = useDispatch();\n\n  return (\n    <>\n      {/* <h2 className={s.title}>Find contacts by name</h2> */}\n      <Form.Label>Find contacts by name</Form.Label>\n      <Form.Control\n        type=\"text\"\n        name=\"filter\"\n        value={filter}\n        onChange={(e) => dispatch(handelChangeFilter(e.currentTarget.value))}\n      />\n    </>\n  );\n}\n\n// Filter.propTypes = {\n//   filter: PropTypes.string.isRequired,\n//   handelChangeFilter: PropTypes.func.isRequired,\n// };\n\n// const mapStateToProps = (state) => ({\n//   filter: state.contacts.filter,\n// });\n\n// const mapDispatchToProps = (dispatch) => ({\n//   handelChangeFilter: (value) => dispatch(handelChangeFilter(value)),\n// });\n\n// export default connect(mapStateToProps, mapDispatchToProps)(Filter);\n","import \"./App.css\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport Container from \"react-bootstrap/Container\";\n// import Nav from \"react-bootstrap/Nav\";\nimport Navbar from \"react-bootstrap/Navbar\";\nimport Row from \"react-bootstrap/Row\";\nimport Col from \"react-bootstrap/Col\";\nimport { FcNook } from \"react-icons/fc\";\n\nimport ContactForm from \"./components/ContactForm\";\nimport ContactList from \"./components/ContactList\";\nimport Filter from \"./components/Filter\";\n\nfunction App() {\n  return (\n    <>\n      <Navbar bg=\"dark\" variant=\"dark\">\n        <Container>\n          <Navbar.Brand>\n            <FcNook />\n            Phonebook\n          </Navbar.Brand>\n          {/* <Nav className=\"me-auto\">\n            <Nav.Link>Home</Nav.Link>\n            <Nav.Link>Features</Nav.Link>\n            <Nav.Link>Pricing</Nav.Link>\n          </Nav> */}\n        </Container>\n      </Navbar>\n      <Container className=\"p-3\">\n        <Row>\n          <Col sm={4}>\n            <ContactForm />\n          </Col>\n          <Col sm={8}>\n            <Filter />\n            <ContactList />\n          </Col>\n        </Row>\n      </Container>\n    </>\n  );\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { PersistGate } from \"redux-persist/integration/react\";\nimport { store, persistor } from \"./redux/store\";\nimport { Provider } from \"react-redux\";\nimport App from \"./App\";\nimport \"./index.css\";\n\nconsole.log(store.getState());\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <PersistGate loading={null} persistor={persistor}>\n        <App />\n      </PersistGate>\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}